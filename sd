#! /bin/sh
# vim: foldmethod=marker foldlevel=0


# Usage Message {{{
USAGE="
SYNOPSYS
    ${0##*/} [options]

DESCRIPTION
    View and manage systemd units

OPTIONS
    -h, --help
        Displays this usage information and exits

    -u, --user
        Talk to the calling user's service manager, instead of the system's

    -s, --system
        Talk to the service manager of the system. This is the implied by default.
" # }}}

# getopt argument parsing {{{
args="$(getopt -o "hus" -l "help,user,system" -n "sd" -- "$@")" \
    || { >&2 echo "Error parsing arguments!"; exit 1; }
eval set -- "$args"

cli_scope="--system"

while true; do
    case "$1" in
        '-h'|'--help') echo "$USAGE"; exit 0 ;;
        '-u'|'--user') cli_scope="--user"; shift ;;
        '-s'|'--system') cli_scope="--system"; shift ;;
        '--') shift; break ;;
    esac
done
# }}}

# grep -v '@\.' filters out uninstantiated templates
unit_files="$(\
    systemctl $cli_scope --quiet list-unit-files \
        | cut --delimiter=' ' --fields=1 | grep -v '@\.')"


# Preview Window {{{
fzf_preview_cmd="env SYSTEMD_COLORS=1 systemctl $cli_scope status -- {}"
fzf_preview_window="right,60%,border-left"
fzf_preview_window="$fzf_preview_window,<100(up,50%,border-bottom)"
# }}}

# Key Bindings {{{

fzf_keybindings="${fzf_keybindings}esc:cancel"
fzf_header=""

add_keybinding() {
    local binding="$1"
    local cmd="$2"
    local header_entry="$3"
    fzf_keybindings="$fzf_keybindings,$binding:$cmd"
    fzf_header="${fzf_header}${header_entry}: ${binding}
"
}

# bind 'Toggle Active' {{{
cmd_toggle_active="\
systemctl $cli_scope --quiet is-active {} \
    && systemctl $cli_scope --quiet stop {} \
    || systemctl $cli_scope --quiet start {}"
add_keybinding \
    'ctrl-a' \
    "execute($cmd_toggle_active)+refresh-preview" \
    "Toggle Active (start/stop)"
# }}}

# bind 'Toggle Enabled' {{{
cmd_toggle_enabled="\
systemctl $cli_scope --quiet is-enabled {} \
    && systemctl $cli_scope --quiet disable {} \
    || systemctl $cli_scope --quiet enable {}"
add_keybinding \
    'ctrl-e' \
    "execute($cmd_toggle_enabled)+refresh-preview" \
    "Toggle Enabled"
# }}}

# bind 'Reload or Restart' {{{
cmd_reload_or_restart="systemctl $cli_scope --quiet reload-or-restart {}"
add_keybinding \
    'ctrl-r' \
    "execute($cmd_reload_or_restart)+refresh-preview" \
    'Reload or Restart'
# }}}

# }}}

fzf \
    --ansi --info=inline \
    --prompt="Unit file: " --header="$fzf_header" --header-first \
    --preview-window="$fzf_preview_window" --preview="$fzf_preview_cmd" \
    --bind="$fzf_keybindings" \
<< EOF
$unit_files
EOF
