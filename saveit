#! /usr/bin/env python

import contextlib
import getpass
import fire
import json
import praw
import sys


def sub2dict(sub):
    return {
        "type": "Submission",
        "author": getattr(sub.author, "name", "[removed/deleted]"),
        "link": "http://reddit.com" + sub.permalink,
        "title": sub.title,
        "subreddit": sub.subreddit_name_prefixed,
        "links_to": sub.url,
        "text": sub.selftext
    }


def cmt2dict(cmt):
    return {
        "type": "Comment",
        "author": getattr(cmt.author, "name", "[removed/deleted]"),
        "link": "http://reddit.com" + cmt.permalink,
        "subreddit": cmt.submission.subreddit_name_prefixed,
        "html": cmt.body_html
    }


CONVERTERS = {
    praw.models.Submission: sub2dict,
    praw.models.Comment: cmt2dict
}


def main(client_id, client_secret, user_agent, name=None, output=None):
    with contextlib.redirect_stdout(sys.stderr):
        raw_saved = praw.Reddit(
            client_id=client_id,
            client_secret=client_secret,
            user_agent=user_agent,
            username=(name or input("Username: ")),
            password=getpass.getpass()
        ).user.me().saved(limit=1000)

    print("Finished downloading entries. Converting...", file=sys.stderr)
    data = [CONVERTERS[type(s)](s) for s in raw_saved]
    print(f"Serealizing {len(data)} items...", file=sys.stderr)
    
    with (sys.stdout if output is None else open(output, "w")) as file:
        json.dump(data, file)


if __name__ == "__main__":
    fire.Fire(main)

